"""add_is_bishop_field_to_rank_table

Revision ID: 2a3813314646
Revises: 4c4903a27386
Create Date: 2025-09-15 11:12:39.449398

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '2a3813314646'
down_revision = '4c4903a27386'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    from sqlalchemy import inspect
    
    # Get connection to check existing columns
    connection = op.get_bind()
    inspector = inspect(connection)
    
    # Check if rank table exists and add column if it doesn't exist
    tables = inspector.get_table_names()
    if 'rank' in tables:
        rank_columns = [col['name'] for col in inspector.get_columns('rank')]
        
        if 'is_bishop' not in rank_columns:
            with op.batch_alter_table('rank', schema=None) as batch_op:
                batch_op.add_column(sa.Column('is_bishop', sa.Boolean(), nullable=False, server_default='false'))
            
            # Update existing ranks to set is_bishop based on name
            op.execute("""
                UPDATE rank 
                SET is_bishop = true 
                WHERE LOWER(name) LIKE '%bishop%' 
                OR LOWER(name) LIKE '%pope%' 
                OR LOWER(name) LIKE '%archbishop%' 
                OR LOWER(name) LIKE '%cardinal%'
            """)
        else:
            print("⚠️  Column 'is_bishop' already exists in rank table")
            # Still update existing ranks to set is_bishop based on name
            op.execute("""
                UPDATE rank 
                SET is_bishop = true 
                WHERE LOWER(name) LIKE '%bishop%' 
                OR LOWER(name) LIKE '%pope%' 
                OR LOWER(name) LIKE '%archbishop%' 
                OR LOWER(name) LIKE '%cardinal%'
            """)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('rank', schema=None) as batch_op:
        batch_op.drop_column('is_bishop')

    # ### end Alembic commands ###
