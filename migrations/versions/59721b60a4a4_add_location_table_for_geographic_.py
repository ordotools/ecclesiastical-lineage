"""Add Location table for geographic plotting

Revision ID: 59721b60a4a4
Revises: 2f11157c9eef
Create Date: 2025-10-01 22:17:41.582131

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '59721b60a4a4'
down_revision = '2f11157c9eef'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # First, ensure any existing location records have valid created_by values
    connection = op.get_bind()
    
    # Check if location table exists and has data
    try:
        result = connection.execute("SELECT COUNT(*) FROM location WHERE created_by IS NOT NULL")
        location_count = result.scalar()
        
        if location_count > 0:
            # Update any NULL created_by values to point to admin user (ID 1)
            connection.execute("UPDATE location SET created_by = 1 WHERE created_by IS NULL")
            
            # Only add the foreign key constraint if there are valid user records
            user_count = connection.execute("SELECT COUNT(*) FROM \"user\"").scalar()
            if user_count > 0:
                with op.batch_alter_table('location', schema=None) as batch_op:
                    batch_op.create_foreign_key('location_created_by_fkey', 'user', ['created_by'], ['id'])
            else:
                print("⚠️  Skipping location foreign key constraint - no users exist")
        else:
            # No location data, safe to add constraint
            user_count = connection.execute("SELECT COUNT(*) FROM \"user\"").scalar()
            if user_count > 0:
                with op.batch_alter_table('location', schema=None) as batch_op:
                    batch_op.create_foreign_key('location_created_by_fkey', 'user', ['created_by'], ['id'])
    except Exception as e:
        print(f"⚠️  Location foreign key constraint skipped due to error: {e}")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('location', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')

    # ### end Alembic commands ###
