#!/usr/bin/env python3
"""
Backblaze B2 Setup Script

This script helps you set up Backblaze B2 cloud storage for the ecclesiastical lineage application.
It will create a .env file with the necessary environment variables.

Usage:
    python setup_backblaze.py

You will need:
1. A Backblaze B2 account (free tier available)
2. A B2 bucket created in your account
3. Application keys (Key ID and Secret Key) from your B2 account
"""

import os
import sys
from pathlib import Path

def main():
    print("üîß Backblaze B2 Setup for Ecclesiastical Lineage")
    print("=" * 50)
    print()
    
    # Check if .env already exists
    env_file = Path('.env')
    if env_file.exists():
        print("‚ö†Ô∏è  .env file already exists!")
        response = input("Do you want to overwrite it? (y/N): ").strip().lower()
        if response != 'y':
            print("Setup cancelled.")
            return
    
    print("Please provide your Backblaze B2 configuration:")
    print()
    
    # Get configuration from user
    bucket_name = input("Bucket Name: ").strip()
    if not bucket_name:
        print("‚ùå Bucket name is required!")
        return
    
    endpoint_url = input("Endpoint URL (e.g., https://s3.us-west-004.backblazeb2.com): ").strip()
    if not endpoint_url:
        print("‚ùå Endpoint URL is required!")
        return
    
    access_key_id = input("Access Key ID: ").strip()
    if not access_key_id:
        print("‚ùå Access Key ID is required!")
        return
    
    secret_access_key = input("Secret Access Key: ").strip()
    if not secret_access_key:
        print("‚ùå Secret Access Key is required!")
        return
    
    region = input("Region (default: us-west-004): ").strip() or "us-west-004"
    
    print()
    print("üìù Creating .env file...")
    
    # Read existing .env content if it exists
    existing_content = ""
    if env_file.exists():
        with open(env_file, 'r') as f:
            existing_content = f.read()
    
    # Create new .env content
    env_content = f"""# Environment Configuration
# Generated by setup_backblaze.py

# Flask Configuration
SECRET_KEY=your-secret-key-here
FLASK_ENV=development
FLASK_DEBUG=True

# Database Configuration
DATABASE_URL=postgresql://localhost:5432/ecclesiastical_lineage_dev

# Development Settings
PORT=5001
DEBUG=True

# Backblaze B2 Cloud Storage Configuration
BACKBLAZE_BUCKET_NAME={bucket_name}
BACKBLAZE_ENDPOINT_URL={endpoint_url}
BACKBLAZE_ACCESS_KEY_ID={access_key_id}
BACKBLAZE_SECRET_ACCESS_KEY={secret_access_key}
BACKBLAZE_REGION={region}
"""
    
    # Write .env file
    with open(env_file, 'w') as f:
        f.write(env_content)
    
    print("‚úÖ .env file created successfully!")
    print()
    print("üîç Testing Backblaze B2 connection...")
    
    # Test the connection
    try:
        from services.backblaze_config import get_backblaze_config
        config = get_backblaze_config()
        if config.is_configured():
            print("‚úÖ Backblaze B2 connection successful!")
            print(f"   Bucket: {config.get_bucket_name()}")
            print(f"   Endpoint: {config.get_endpoint_url()}")
        else:
            print("‚ùå Backblaze B2 connection failed!")
            print("   Please check your credentials and try again.")
    except Exception as e:
        print(f"‚ùå Error testing connection: {e}")
        print("   Please check your credentials and try again.")
    
    print()
    print("üéâ Setup complete!")
    print("You can now run the application with: python app.py")

if __name__ == "__main__":
    main()